{
  "name": "Telegram AI Assistant - Weather, News & Events",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/telegram-test",
        "responseMode": "onReceived",
        "responseData": "allEntries"
      },
      "id": "chat-webhook",
      "name": "Chat Interface",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        250,
        300
      ]
    },
    {
      "parameters": {
        "updates": [
          "message",
          "edited_message"
        ]
      },
      "id": "telegram-trigger",
      "name": "Telegram Bot Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        250,
        500
      ],
      "webhookId": "telegram-1755666062269"
    },
    {
      "parameters": {
        "mode": "multiplex"
      },
      "id": "merge-inputs",
      "name": "Merge Inputs",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [
        450,
        400
      ]
    },
    {
      "parameters": {
        "sessionIdType": "fromInput",
        "text": "={{ $json.message?.text || $json.query || \"Hello\" }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful AI assistant for Telegram users. You have access to:\n- Weather information for any location (especially Everett, MA)\n- Latest news and headlines \n- Local events information\n- Database for storing user preferences and history\n\nWhen a user asks about weather, news, or events for a location (like Everett, MA), provide that information.\nFor weather requests, respond with current conditions and forecast.\nFor news requests, provide latest headlines and summaries.\nFor events, list upcoming local events.\n\nAlways be helpful and conversational. If you can't find specific information, let the user know and suggest alternatives.",
          "temperature": 0.7,
          "maxTokens": 500
        }
      },
      "id": "ai-agent-center",
      "name": "AI Agent (Central Hub)",
      "type": "n8n-nodes-langchain.agent",
      "typeVersion": 1.2,
      "position": [
        650,
        400
      ]
    },
    {
      "parameters": {
        "operation": "currentWeather",
        "cityName": "Everett, MA",
        "additionalFields": {
          "units": "imperial",
          "language": "en"
        }
      },
      "id": "weather-tool",
      "name": "Weather API",
      "type": "n8n-nodes-base.openWeatherMap",
      "typeVersion": 1,
      "position": [
        450,
        200
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://newsapi.org/v2/everything",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "Everett Massachusetts OR Boston news"
            },
            {
              "name": "sortBy",
              "value": "publishedAt"
            },
            {
              "name": "pageSize",
              "value": "5"
            },
            {
              "name": "language",
              "value": "en"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key",
              "value": "{{ $credentials.newsApiKey }}"
            }
          ]
        },
        "options": {
          "timeout": 10000,
          "response": {
            "response": {
              "fullResponse": false,
              "responseFormat": "json"
            }
          }
        }
      },
      "id": "news-tool",
      "name": "News API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        850,
        200
      ]
    },
    {
      "parameters": {
        "method": "GET",
        "url": "https://serpapi.com/search",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "engine",
              "value": "google_events"
            },
            {
              "name": "q",
              "value": "events in Everett Massachusetts today"
            },
            {
              "name": "location",
              "value": "Everett, MA"
            },
            {
              "name": "api_key",
              "value": "{{ $credentials.serpApiKey }}"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "events-tool",
      "name": "Events API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        850,
        600
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "\n                        INSERT INTO conversations (user_id, message, response, timestamp)\n                        VALUES (\n                            COALESCE($1::text, 'test-user'),\n                            $2::text,\n                            $3::text,\n                            NOW()\n                        )\n                        ON CONFLICT (user_id) DO UPDATE\n                        SET message = $2, response = $3, timestamp = NOW()\n                        RETURNING *\n                    ",
        "additionalFields": {
          "mode": "multiple"
        }
      },
      "id": "postgres-memory",
      "name": "PostgreSQL Memory",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [
        450,
        600
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24,
              "triggerAtHour": 8,
              "triggerAtMinute": 0
            }
          ]
        },
        "timezone": "America/New_York"
      },
      "id": "schedule-trigger",
      "name": "Morning Schedule",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        250,
        800
      ]
    },
    {
      "parameters": {
        "fromEmail": "noreply@clixen.ai",
        "toEmail": "jimkalinov@gmail.com",
        "subject": "Daily Update: Weather, News & Events for Everett, MA - {{ new Date().toLocaleDateString() }}",
        "html": "\n                        <h2>Good Morning! üåÖ</h2>\n                        <p>Here's your daily update for Everett, MA:</p>\n                        \n                        <h3>üå§Ô∏è Weather:</h3>\n                        <div style=\"background: #f0f8ff; padding: 10px; border-radius: 5px;\">\n                            {{ $node[\"weather-tool\"].json }}\n                        </div>\n                        \n                        <h3>üì∞ Top News:</h3>\n                        <div style=\"background: #fff8f0; padding: 10px; border-radius: 5px;\">\n                            {{ $node[\"news-tool\"].json }}\n                        </div>\n                        \n                        <h3>üéâ Events Today:</h3>\n                        <div style=\"background: #f0fff0; padding: 10px; border-radius: 5px;\">\n                            {{ $node[\"events-tool\"].json }}\n                        </div>\n                        \n                        <p style=\"color: #666; font-size: 12px;\">\n                            Sent automatically by your Telegram AI Assistant\n                        </p>\n                    ",
        "options": {}
      },
      "id": "email-send",
      "name": "Send Email Report",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        1050,
        800
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "1",
              "leftValue": "={{ $node[\"merge-inputs\"].json.message?.chat?.id }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "response-router",
      "name": "Response Router",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        850,
        400
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "sendMessage",
        "chatId": "={{ $node[\"merge-inputs\"].json.message.chat.id }}",
        "text": "={{ $node[\"ai-agent-center\"].json.output }}",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "telegram-reply",
      "name": "Reply to Telegram",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        1050,
        350
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"response\": $node[\"ai-agent-center\"].json.output, \"timestamp\": new Date().toISOString() } }}"
      },
      "id": "chat-response",
      "name": "Chat Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1050,
        450
      ]
    }
  ],
  "connections": {
    "chat-webhook": {
      "main": [
        [
          {
            "node": "merge-inputs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "telegram-trigger": {
      "main": [
        [
          {
            "node": "merge-inputs",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "merge-inputs": {
      "main": [
        [
          {
            "node": "ai-agent-center",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ai-agent-center": {
      "main": [
        [
          {
            "node": "response-router",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "postgres-memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "response-router": {
      "main": [
        [
          {
            "node": "telegram-reply",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "chat-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "schedule-trigger": {
      "main": [
        [
          {
            "node": "weather-tool",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "news-tool",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "events-tool",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "weather-tool": {
      "main": [
        [
          {
            "node": "email-send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "news-tool": {
      "main": [
        [
          {
            "node": "email-send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "events-tool": {
      "main": [
        [
          {
            "node": "email-send",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "all",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner",
    "timezone": "America/New_York",
    "errorWorkflow": null
  },
  "staticData": null,
  "tags": [
    "telegram",
    "ai-agent",
    "weather",
    "news",
    "events",
    "automated",
    "chat"
  ],
  "triggerCount": 0,
  "updatedAt": "2025-08-20T05:01:02.269Z",
  "versionId": null
}