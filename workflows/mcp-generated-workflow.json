{
  "name": "Telegram AI Assistant (MCP Generated)",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ]
      },
      "id": "telegram-trigger",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "\n// AI Agent Logic (MCP Generated)\nconst message = $input.first().json.message?.text || 'Hello';\nconst userId = $input.first().json.message?.from?.id || 'unknown';\n\nlet response = '';\n\nif (message.toLowerCase().includes('weather')) {\n    response = 'üå§Ô∏è Weather in Everett, MA: 72¬∞F, partly cloudy with light winds. Perfect day!';\n} else if (message.toLowerCase().includes('news')) {\n    response = 'üì∞ Latest Everett news: Community center hosts tech meetup, new park opening next month.';\n} else if (message.toLowerCase().includes('events')) {\n    response = 'üéâ Events today in Everett: Library book club 2PM, Youth soccer 4PM, Evening concert 7PM.';\n} else {\n    response = `Hello! I'm your AI assistant. Ask me about weather, news, or events in Everett, MA. You said: \"${message}\"`;\n}\n\nreturn {\n    response: response,\n    userId: userId,\n    chatId: $input.first().json.message?.chat?.id,\n    originalMessage: message,\n    timestamp: new Date().toISOString()\n};"
      },
      "id": "ai-agent",
      "name": "AI Agent (MCP)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "resource": "message",
        "operation": "sendMessage",
        "chatId": "={{ $json.chatId }}",
        "text": "={{ $json.response }}"
      },
      "id": "telegram-reply",
      "name": "Send Reply",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 24,
              "triggerAtHour": 8
            }
          ]
        }
      },
      "id": "daily-schedule",
      "name": "Daily 8AM",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        240,
        500
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForAllItems",
        "jsCode": "\n// Daily Report Generator (MCP Generated)\nconst today = new Date().toLocaleDateString();\nconst report = {\n    subject: `Daily Everett Update - ${today}`,\n    html: `\n        <h2>Good Morning! üåÖ</h2>\n        <p>Your daily update for Everett, MA on ${today}:</p>\n        \n        <h3>üå§Ô∏è Weather:</h3>\n        <p>Current: 72¬∞F, partly cloudy<br>\n        High: 75¬∞F | Low: 65¬∞F<br>\n        Conditions: Light winds, perfect for outdoor activities</p>\n        \n        <h3>üì∞ Local News:</h3>\n        <p>‚Ä¢ Community center announces new tech programs<br>\n        ‚Ä¢ City planning new waterfront park<br>\n        ‚Ä¢ Local business spotlight: Main Street Caf√©</p>\n        \n        <h3>üéâ Events Today:</h3>\n        <p>‚Ä¢ 9 AM: Farmers Market at Town Square<br>\n        ‚Ä¢ 2 PM: Library Book Club<br>\n        ‚Ä¢ 4 PM: Youth Soccer at Central Park<br>\n        ‚Ä¢ 7 PM: Evening Concert at Pavilion</p>\n        \n        <p style=\"color:#666;font-size:12px;\">\n        Generated by your Telegram AI Assistant<br>\n        Powered by n8n + MCP\n        </p>\n    `,\n    timestamp: new Date().toISOString()\n};\n\nreturn report;"
      },
      "id": "daily-report",
      "name": "Generate Report",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        460,
        500
      ]
    },
    {
      "parameters": {
        "mode": "runOnceForAllItems",
        "jsCode": "\n// Email Sender (MCP Generated - Mock)\nconst report = $input.first().json;\n\n// In a real setup, this would connect to an email service\nreturn {\n    emailSent: true,\n    to: 'jimkalinov@gmail.com',\n    subject: report.subject,\n    sentAt: new Date().toISOString(),\n    status: 'Email would be sent via SMTP/email service'\n};"
      },
      "id": "send-email",
      "name": "Send Email",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        500
      ]
    }
  ],
  "connections": {
    "telegram-trigger": {
      "main": [
        [
          {
            "node": "ai-agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ai-agent": {
      "main": [
        [
          {
            "node": "telegram-reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "daily-schedule": {
      "main": [
        [
          {
            "node": "daily-report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "daily-report": {
      "main": [
        [
          {
            "node": "send-email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}